class Item:
    def __init__(self, value, weight):
        self.value = value
        self.weight = weight

def compare(item):
    return item.value / item.weight

def fractional_knapsack(capacity, items):
    items.sort(key=compare, reverse=True)
    total_value = 0.0

    for item in items:
        if capacity >= item.weight:
            capacity -= item.weight
            total_value += item.value
        else:
            total_value += item.value * (capacity / item.weight)
            break
    return total_value

def main():
    n = int(input("Enter the number of items: "))
    items = []

    for i in range(n):
        value, weight = map(int, input(f"Enter value and weight of item {i + 1}: ").split())
        items.append(Item(value, weight))

    W = int(input("Enter the capacity of the knapsack: "))
    max_value = fractional_knapsack(W, items)

    print(f"Maximum value in Knapsack = {max_value:.2f}")

if __name__ == "__main__":
    main()






Enter the number of items: 3
Enter value and weight of item 1: 500 30
Enter value and weight of item 2: 300 10
Enter value and weight of item 3: 400 20
Enter the capacity of the knapsack: 40
Maximum value in Knapsack = 866.67

=== Code Execution Successful ===