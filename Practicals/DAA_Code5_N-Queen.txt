#include <iostream>
#include <vector>
using namespace std;

void printSolution(const vector<vector<int>>& board, int N) {
    for (const auto& row : board) {
        for (int cell : row) {
            cout << (cell ? "Q " : ". ");
        }
        cout << endl;
    }
    cout << endl;
}

bool isSafe(const vector<vector<int>>& board, int row, int col, int N) {
    for (int i = 0; i < col; i++) {
        if (board[row][i]) return false;
    }
    for (int i = row, j = col; i >= 0 && j >= 0; i--, j--) {
        if (board[i][j]) return false;
    }
    for (int i = row, j = col; i < N && j >= 0; i++, j--) {
        if (board[i][j]) return false;
    }
    return true;
}

void solveNQueens(vector<vector<int>>& board, int col, int N, vector<vector<vector<int>>>& solutions) {
    if (col >= N) {
        solutions.push_back(board);
        return;
    }
    for (int i = 0; i < N; i++) {
        if (isSafe(board, i, col, N)) {
            board[i][col] = 1;
            solveNQueens(board, col + 1, N, solutions);
            board[i][col] = 0;
        }
    }
}

int main() {
    int N, row, col;
    cout << "Enter the value of N (size of the chessboard): ";
    cin >> N;

    cout << "Enter the row and column index for the first queen (0-based index): ";
    cin >> row >> col;

    if (row < 0 || row >= N || col < 0 || col >= N) {
        cout << "Invalid position! The row and column must be within the range 0 to " << N - 1 << "." << endl;
        return 1;
    }

    vector<vector<int>> board(N, vector<int>(N, 0));
    board[row][col] = 1; // Placing the first queen at the user-specified position

    vector<vector<vector<int>>> solutions;
    solveNQueens(board, col + 1, N, solutions);

    cout << "All possible solutions with the first queen placed at (" << row << ", " << col << "):\n";
    for (const auto& solution : solutions) {
        printSolution(solution, N);
    }

    return 0;
}







/tmp/vDdwgVDQvk.o
Enter the value of N (size of the chessboard): 5
Enter the row and column index for the first queen (0-based index): 1 1
All possible solutions with the first queen placed at (1, 1):

. . . Q . 
. Q . . . 
. . . . Q 
. . Q . . 
. . . . . 

. . . Q . 
. Q . . . 
. . . . . 
. . . . Q 
. . Q . . 

. . . . Q 
. Q . . . 
. . . Q . 
. . . . . 
. . Q . . 



=== Code Execution Successful ===